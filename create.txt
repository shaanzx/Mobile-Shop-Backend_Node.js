1.Create empty Project

2.Create the src directory

3.run 'npm init -y' in terminal (Build the package.json file)

4.Install the dependencies{
    "npm install express" (Build the package-lock.json file)
    "npm install -D typescript ts-node @types/node @types/express" (-D means Dev Dependencies. This dependency is only required for development)
}

5.run "npx tsc --init" to create the tsconfig.json file. It has typescript configuration

6. Change "target": "es2016", to "target": "es6" in tsconfig.json file

7. Uncomment the "outDir": "./dist" in tsconfig.json file (
    outDir means output directory. This is the directory where the compiled code will be stored. dist means distribution
    )

8. Uncomment the "rootDir": "./src" in tsconfig.json file (
    rootDir means root directory. This is the directory where the source code is stored. src means source
    )

9. Create the index.ts file in src directory

10. Change the package.json file script
      "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
      }, to
      "scripts": {
        "dev": "ts-node src/index.ts"
      }

11. run "npm run dev" in terminal

12.Add "build": "tsc" in package.json script file
    (This is creation of build script)

13.run "npm run build" in terminal

14. Add "serve": "node dist/index.js" in package.json script file
    (This is creation of serve script)

15.run "npm run serve" in terminal

16. Install nodemon using "npm install -D nodemon"

17. Add "dev": "nodemon src/index.ts" in package.json script file
    (nodemon is used to restart the server when the code is changed)

18.run "npm run dev" in terminal

19.Create file nodemon.json in root directory (Define the nodemon configuration)
    {
        "watch": ["src"] // This is the directory where the source code is stored
        "ext": "ts" // This is the extension of the source code
        "ignore": ["src/**/*.spec.ts"] // Ignore the test files
        "exec": "ts-node src/index.ts" // This is the command to run the source code
    }

20. Change "dev": "nodemon src/index.ts" in package.json script file to "dev": "nodemon"

21. run "npm run dev" in terminal

2025.07.05

01. Create .env file for use of environment variables.Like port number

02. Install dotenv using "npm install dotenv"

03.Define folder structure
        project/
        |---- app.ts (The main entry point of the application. This file creates a server and sets up the application to listen on a specific port.)
        |---- index.ts(The main logic of the application. This file defines the application's routes, middleware, and other core functionality.)
        |---- .env(A file that stores environment variables for the application. This file is used to store sensitive information such as database credentials and API keys.)
        |---- src/
        |       |---- controllers/ (A folder that contains the application's controllers. Controllers handle incoming requests and send responses to the client.)
        |       |---- models/ (A folder that contains the application's data models. Data models define the structure of the application's data.)
        |       |---- routes/( A folder that contains the application's routes. Routes define the URLs that the application responds to.)
        |       |---- services/(A folder that contains the application's services. Services are reusable functions that perform specific tasks.)
        |---- package.json(A file that contains metadata for the application, including dependencies and scripts.)
        |---- tsconfig.json(A file that contains configuration settings for the TypeScript compiler.)